@use '../../shared/theme/myF';
@use '../../shared/theme/myGlobals';
@use '../../shared/theme/helpers';
@use '../../shared/theme/base';

/* !!!TBD!!! NOTE: it is difficult to construct a control line that will resize in rem units while remaining on one line.
   Yet, it is both aesthetically desirable and offers expected video control behavior to keep the controls aligned closely
   to the video area itself, i.e., one line of controls, not multiple.  So, for the moment, sizing is done here with pixels
   rather than rem units for the video control line, so one line of controls is kept for widths of 400px, i.e.,
   myF.bp(video_controls_one_line), or greater. */

.videoplayer {
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: black;
  position: relative;
  width: 100%;
  max-width: myF.bp(max_video_width); /* !!!TBD!!! decide later whether to remove max-width restriction here for "zooming in" too much into low-res video
                                     If changed, change out other uses of myF.bp(max_video_width) for controls tied to video player too!!! */
  height: 100%;
}

.video {
  display: block;
  width: 100%;
  height: 100%;
  z-index: 0;
}

.controls {
  color: white;
  background-color: myF.color(mid-grey);
  width: 100%;
  height: 44px;
}

.controls-when-narrow { /* like controls with less height */
  color: white;
  background-color: myF.color(mid-grey);
  width: 100%;
  height: 36px;
}

.narrow-video-controls-only { /* for narrow view, video controls must be on 2 lines */
  /* Clause 1: Video is in the one and only column.  Don't show this "narrow" view if we are wide enough. */
  @media screen and (min-width: myF.bp(video_controls_one_line)) and (max-width: myF.bp(required_video_in_column_just_before)) {
    display: none !important;
  }
  /* Clause 2: Video is in left column.  Don't show this "narrow" view, ever. Assumes if we show video in column, we won't need narrow view. */
  @media screen and (min-width: myF.bp(required_video_in_column)) {
    display: none !important;
  }
}

.wider-video-controls-only { /* for typical "wider" view, video controls fit on 1 line; same, too, for wider views with video in one column of that view */
  /* Clause 1: Video is in the one and only column (assuming video_controls_one_line less than required_video_in_column).
     Don't show this "wide" view if we are too narrow. */
  @media screen and (max-width: myF.bp(video_controls_one_line_just_before)) {
    display: none !important;
  }
}

.controls .menu .left {
  justify-content: flex-start;
}

.controls .menu .right {
  justify-content: flex-end;
}

.show-mouse {
  cursor: default;
}

.hide-mouse {
  cursor: none;
}

/* Two speakers: S1 as interviewer, S2 as the HistoryMaker. */
video::cue(v[voice="S1"]) {
  color: yellow;
}
video::cue(v[voice="S2"]) {
  color: white;
}

.playtime {
  color: black;
  font-size: 14px; /* see note above, using pixels instead of rem units to ALWAYS maintain a tight display in the video control line */
  width: 100%;
  text-align: center;
}

.videoSlider {
  width: 100%;
  color: white;
}

/* Note: sliders, i.e., HTML5 input type="range" elements, are notoriously hard to style across browsers.
   The styles below are from a 2021 article
   https://www.smashingmagazine.com/2021/12/create-custom-range-input-consistent-browsers/ on how to proceed. */

/********** Range Input Styles **********/
/*Range Reset*/
/* Removes default focus */
input[type="range"] {
  -webkit-appearance: none;
   appearance: none;
   background: transparent;
   cursor: pointer;
}

/* Removes default focus */
input[type="range"]:focus {
 outline: none;
}

/***** Chrome, Safari, Opera and Edge Chromium styles *****/
/* slider track */
input[type="range"]::-webkit-slider-runnable-track {
  background-color: white;
  border-radius: 0.35rem;
  height: 0.35rem;
  margin-right: 4px; /* leave space at the right for aesthetics */
  margin-bottom: 2px; /* leave space at the bottom for aesthetics */
}

/* slider thumb */
input[type="range"]::-webkit-slider-thumb {
 -webkit-appearance: none; /* Override default look */
  appearance: none;
  margin-top: -6px; /* Centers thumb on the track */

  /*custom styles*/
  background-color: white;
  height: 1.1rem;
  width: 1.1rem;
  border-radius: 50%;
}

input[type="range"]:focus::-webkit-slider-thumb {
 border: 1px solid rgba(48, 48, 112, 0.4);
 outline: 6px solid rgba(48, 48, 112, 0.4);
 /* outline-offset: 0.125rem; uncomment this if you want a ring rather than tinted expansion (and reduce outline to 3px too) */
}

/******** Firefox styles ********/
/* slider track */
input[type="range"]::-moz-range-track {
  background-color: white;
  border-radius: 0.35rem;
  height: 0.35rem;
}

/* slider thumb */
input[type="range"]::-moz-range-thumb {
  border: none; /*Removes extra border that FF applies*/

  /*custom styles*/
  background-color: white;
  height: 1.1rem;
  width: 1.1rem;
  border-radius: 50%; /* NOTE: this may produce visual artifacts that FF applies, solved if we went to rectangle rather than ball as the thumb.... */
}

input[type="range"]:focus::-moz-range-thumb {
  border: 1px solid rgba(48, 48, 112, 0.4);
  outline: 6px solid rgba(48, 48, 112, 0.4);
  /* outline-offset: 0.125rem; uncomment this if you want a ring rather than tinted expansion (and reduce outline to 3px too) */
 }

